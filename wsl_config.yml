- name: WSL Configuration Playbook
  hosts: all
  tasks:
    - name: Update APT Cache
      ansible.builtin.apt:
        update_cache: true

    - name: Update update-manager
      ansible.builtin.apt:
        state: latest  # noqa: package-latest
        force_apt_get: true
        name: update-manager-core
        allow_change_held_packages: true
        autoremove: true
        purge: true

    - name: Purge snapd
      ansible.builtin.apt:
        state: absent
        purge: true
        name: snapd

    - name: Upgrade the OS (apt-get dist-upgrade)
      ansible.builtin.apt:
        upgrade: dist
        allow_change_held_packages: true
        autoremove: true
        autoclean: true
        purge: true

    - name: Configure systemd with WSL-specific patches
      block:
        - name: Check the current default systemd target
          register: current_target
          changed_when: false
          ansible.builtin.command:
            cmd: systemctl get-default # noqa: command-instead-of-module

        - name: Set systemd default target to multi-user.target
          when: current_target.stdout != "multi-user.target"
          ansible.builtin.command:
            cmd: systemctl set-default multi-user.target # noqa: no-changed-when

        - name: Create WSL Keepalive Service
          notify:
            - Reload systemd
          ansible.builtin.copy:
            src: wsl-keepalive.service
            dest: /etc/systemd/system/
            owner: root
            group: root
            mode: '0644'

        - name: Fix Systemd user-runtime service
          notify:
            - Reload systemd
          ansible.builtin.copy:
            src: override.conf
            dest: /etc/systemd/system/user-runtime-dir@.service.d/
            owner: root
            group: root
            mode: '0644'

        - name: Enable and start WSL Keepalive Service
          ansible.builtin.systemd:
            name: wsl-keepalive.service
            enabled: 'yes'
            state: started
            masked: 'no'

        - name: Disable WSL-incompatible services
          ansible.builtin.systemd:
            name: '{{ item }}.service'
            enabled: 'no'
            state: stopped
            masked: 'yes'
          loop:
            - systemd-networkd-wait-online
            - systemd-remount-fs

        - name: Enable systemd in the WSL config file (/etc/wsl.conf)
          community.general.ini_file:
            path: /etc/wsl.conf
            section: boot
            option: systemd
            value: 'true'
            backup: true
            mode: '0644'

    - name: Install and configure Docker
      block:
        - name: Install Docker
          ansible.builtin.apt:
            name:
              - docker
              - docker-compose
              - docker-buildx
            state: present
            update_cache: false

        - name: Enable Docker
          ansible.builtin.systemd_service:
            name: docker
            state: started
            enabled: true
            masked: 'no'

    - name: Install and configure sshd
      block:
        - name: Install SSH packages
          ansible.builtin.apt:
            name:
              - openssh-server
              - openssh-client
            state: present
            update_cache: false

        - name: Install common SSH host keys
          block:
            - name: Install public host keys
              ansible.builtin.copy:
                force: false
                src: 'ssh_keys/{{ item }}.pub'
                dest: /etc/ssh/
                mode: '0644'
              loop:
                - ssh_host_dsa_key
                - ssh_host_ecdsa_key
                - ssh_host_ed25519_key
                - ssh_host_rsa_key

            - name: Install private host keys
              ansible.builtin.copy:
                force: false
                src: 'ssh_keys/{{ item }}'
                dest: /etc/ssh/
                mode: '0600'
              loop:
                - ssh_host_dsa_key
                - ssh_host_ecdsa_key
                - ssh_host_ed25519_key
                - ssh_host_rsa_key

        - name: Ensure PasswordAuthentication is set to yes
          ansible.builtin.lineinfile:
            path: /etc/ssh/sshd_config
            regexp: '^#?PasswordAuthentication'
            line: PasswordAuthentication yes
            validate: /usr/sbin/sshd -t -f %s

        - name: Enable and restart sshd
          ansible.builtin.systemd_service:
            name: ssh
            state: restarted
            enabled: true
            masked: false

    - name: Configure dat3 user
      block:
        - name: Create dat3 user-group
          ansible.builtin.group:
            name: dat3
            state: present

        - name: Create dat3 user
          ansible.builtin.user:
            name: dat3
            group: dat3
            create_home: true
            append: true
            groups:
              - docker
              - sudo
              - dialout
              - adm
            password: "$6$BfWvj0eKjGhAnbqu$LatOw3X2kfV3clhoXxqBdWDwX/R8lo4.ybpNjd5xwxJo2nMj26VumfMMd3SKGnGoMgB/U8a9.nlSIYAaOPMUE/"
            generate_ssh_key: true

        - name: Install SSH private key for dat3 user
          ansible.builtin.copy:
            src: ssh_keys/id_rsa
            dest: /home/dat3/.ssh/id_rsa
            owner: dat3
            group: dat3
            mode: '0600'

        - name: Install SSH public key for dat3 user
          ansible.builtin.copy:
            src: ssh_keys/id_rsa.pub
            dest: /home/dat3/.ssh/id_rsa.pub
            owner: dat3
            group: dat3
            mode: '0644'

  handlers:
    - name: Reload systemd
      ansible.builtin.systemd_service:
        daemon_reload: true

    - name: Restart ssh
      ansible.builtin.systemd_service:
        state: restarted
        daemon_reload: true
        name: ssh
